<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        +Pwo9CJgBQAAAABJRU5ErkJggg==
</value>
  </data>
</root>